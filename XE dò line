////////// XE DO LINE - IR - PID //////////

#define ss1 A5 
#define ss2 A4
#define ss3 A3
#define ss4 A2
#define ss5 A1
#define ss6 A0



int sensor[6] = {0, 0, 0, 0, 0, 0};

#define inA1 6
#define inA2 7
#define inB1 9
#define inB2 8
   
#define EnA 5
#define EnB 10

// #define clp 8  //Cong tac hanh trinh
int e;
float P;
float error;
float I, D;
float previous_error=0;
float PID_value;

int demphai = 0;
int demtrai = 0;
int cophai;
int cotrai;
int ngatu=0;
int initial_motor_speed = 120;

// boolean start =false;
int flag = 0;
int dem = 0;


void setup() 
{
  // put your setup code here, to run once:
  pinMode(ss1, INPUT);
  pinMode(ss2, INPUT);
  pinMode(ss3, INPUT);
  pinMode(ss4, INPUT);
  pinMode(ss5, INPUT);
  pinMode(ss6, INPUT);

  pinMode(inA1, OUTPUT);
  pinMode(inA2, OUTPUT);
  pinMode(inB1, OUTPUT);
  pinMode(inB2, OUTPUT);

  Serial.begin(9600);
  
  I=0;  D=0;  P=0;  error=0;
}
void demnga(){

 
}
void loop() 
{
  read_sensor_values();
  Serial.print(error);
   calculate_pid();                  // Tính giá trị PID
   motor_control();
  
  

}

void read_sensor_values()
{
  sensor[1]=digitalRead(ss1);
  sensor[2]=digitalRead(ss2);
  sensor[3]=digitalRead(ss3);
  sensor[4]=digitalRead(ss4);
  sensor[5]=digitalRead(ss5);
  sensor[6]=digitalRead(ss6);
 
  // if (digitalRead(ss1)==0)    sensor[1]=1;  else    sensor[1]=0;  
  // if (digitalRead(ss2)==0)    sensor[2]=1;  else    sensor[2]=0;
  // if (digitalRead(ss3)==0)    sensor[3]=1;  else    sensor[3]=0;      
  // if (digitalRead(ss4)==0)    sensor[4]=1;  else    sensor[4]=0;
  // if (digitalRead(ss5)==0)    sensor[0]=1;  else    sensor[0]=0;  
  // if (digitalRead(ss6)==0)    sensor[0]=1;  else    sensor[0]=0;    
  


  
  if     ((sensor[1]==1)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error=5;
  else if((sensor[1]==1)&&(sensor[2]==1)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error=4;
  else if((sensor[1]==0)&&(sensor[2]==1)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error=3;
  else if((sensor[1]==0)&&(sensor[2]==1)&&(sensor[3]==1)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error=2;
  
  else if((sensor[1]==0)&&(sensor[2]==1)&&(sensor[3]==1)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error=1;
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==1)&&(sensor[4]==1)&&(sensor[5]==0)&&(sensor[6]==0))    error=0;
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==1)&&(sensor[5]==0)&&(sensor[6]==0))    error=-1;

  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==1)&&(sensor[5]==1)&&(sensor[6]==0))    error=-2;
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==1)&&(sensor[6]==0))    error=-3;
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==1)&&(sensor[6]==1))    error=-4;
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==1))    error=-5;
  //else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error=111;

    
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==1)&&(sensor[4]==1)&&(sensor[5]==1)&&(sensor[6]==1))    error = 100;
  else if((sensor[1]==0)&&(sensor[2]==0)&&(sensor[3]==0)&&(sensor[4]==1)&&(sensor[5]==1)&&(sensor[6]==1))    error = 100;
  
  else if((sensor[1]==1)&&(sensor[2]==1)&&(sensor[3]==1)&&(sensor[4]==0)&&(sensor[5]==0)&&(sensor[6]==0))    error = 101;  
  else if((sensor[1]==1)&&(sensor[2]==1)&&(sensor[3]==1)&&(sensor[4]==1)&&(sensor[5]==0)&&(sensor[6]==0))    error = 101;
  //else error = 0 ;
  Serial.println(error);

  
}

void calculate_pid()
{   
    float Kp=15, Kd=0.04, Ki=0.04;
    float P, I, D;
    float SamplingTime = 0.01;
    error =0 - error;
    P = error * Kp;
    I += Ki*error*SamplingTime;
    D = (Kd *(error - previous_error)) / SamplingTime;
    PID_value = P + I + D;
    previous_error = error;
}

void motor_control()
{
    // Calculating the effective motor speed:
    int left_motor_speed  = initial_motor_speed + PID_value;   // dau -
    int right_motor_speed = initial_motor_speed - PID_value;   // dau +
    // Serial.print("PID= ");  Serial.println(PID_value);
    // The motor speed should not exceed the max PWM value    
    //// Mới thêm //////////////////////////
    if (left_motor_speed > 255)
        left_motor_speed = 255;
    else
    if (left_motor_speed < 0)
        left_motor_speed = 0;
    
    if (right_motor_speed > 255)
        right_motor_speed = 255;
    else
    if (right_motor_speed < 0 )
        right_motor_speed = 0;
    //// Kết thúc mới thêm//////////////////
            
    analogWrite(EnA,right_motor_speed);  //Left Motor Speed
    analogWrite(EnB,left_motor_speed); //Right Motor Speed
    forward();
    // digitalWrite(inA1,HIGH);
    // digitalWrite(inA2,LOW);
    // digitalWrite(inB1,HIGH);
    // digitalWrite(inB2,LOW);
}


void forward()
{
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, LOW);
  digitalWrite(inA2, HIGH);
  digitalWrite(inB1, LOW);
  digitalWrite(inB2, HIGH);
}
void reverse()
{
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, HIGH);
  digitalWrite(inA2, LOW);
  digitalWrite(inB1, HIGH);
  digitalWrite(inB2, LOW);
}
void left()
{
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, LOW);
  digitalWrite(inA2, HIGH);
  digitalWrite(inB1, LOW);
  digitalWrite(inB2, LOW);
}
void right()
{
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, LOW);
  digitalWrite(inA2, LOW);
  digitalWrite(inB1, LOW);
  digitalWrite(inB2, HIGH);

}
void sharpLeftTurn() {
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, HIGH);
  digitalWrite(inA2, LOW);
  digitalWrite(inB1, LOW);
  digitalWrite(inB2, HIGH);
}
void sharpRightTurn() {
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, LOW);
  digitalWrite(inA2, HIGH);
  digitalWrite(inB1, HIGH);
  digitalWrite(inB2, LOW);
  
}
void stop_bot()
{
  /*The pin numbers and high, low values might be different depending on your connections */
  digitalWrite(inA1, LOW);
  digitalWrite(inA2, LOW);
  digitalWrite(inB1, LOW);
  digitalWrite(inB2, LOW);
}
